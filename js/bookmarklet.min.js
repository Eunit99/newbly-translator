javascript: (function () {
  var newbly = {
    init: function () {
      function e() {
        return window.location.href;
      }
      async function n() {
        let e,
          n,
          t = await i();
        (e = null !== t ? t.title : ""),
          (n = null !== t ? t.content : []),
          (document.getElementById("newbly-translated-text-null").innerHTML =
            e);
        for (let e = 0; e < n.length; e++) {
          let t = document.getElementById(`newbly-translated-text-${e}`);
          n[e] &&
            t &&
            (document.getElementById(`newbly-translated-text-${e}`).innerHTML =
              n[e]);
        }
      }
      async function t() {
        let e = "",
          n = E(),
          t = await fetch(n),
          a = await t.json();
        return t.ok
          ? ((e = a.articleId), e)
          : (console.error(
              "Something went wrong while contacting the Newbly server. Could not fetch articleId."
            ),
            toastr.error(
              "Something went wrong while contacting the Newbly server. Could not fetch articleId."
            ),
            !1);
      }
      async function a() {
        let e = await t();
        return `${c().longLang.toLowerCase()}_${e}`;
      }
      async function i() {
        const e = await a();
        return JSON.parse(localStorage.getItem(e));
      }
      (document.head.innerHTML +=
        '<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>'),
        (document.head.innerHTML +=
          '<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/eunit99/newbly-translator@1.0.10/lib/css/style.min.css" type="text/css"/>'),
        /MSIE \d|Trident.*rv:/.test(navigator.userAgent) &&
          document.write(
            '<script src="https://cdn.jsdelivr.net/gh/eunit99/newbly-translator@1.0.10/lib/js/script.js"></script>'
          ),
        (document.head.innerHTML +=
          '<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/eunit99/newbly-translator@1.0.10/vendor/toastr.min.css" type="text/css"/>'),
        (document.head.innerHTML +=
          '<script src="https://cdn.jsdelivr.net/gh/eunit99/newbly-translator@1.0.10/vendor/toastr.min.js"></script>'),
        (document.head.innerHTML +=
          '<script src="https://cdn.jsdelivr.net/gh/eunit99/newbly-translator@1.0.10/vendor/keycloak.min.js"></script>'),
        setTimeout(() => {
          Keycloak({
            realm: "newbly",
            "auth-server-url": "https://sso.newb.ly/auth",
            "ssl-required": "external",
            resource: "newbly",
            "public-client": !0,
            "confidential-port": 0,
            url: `https://sso.newb.ly/auth/realms/newbly/protocol/openid-connect/auth?client_id=newbly-ui&redirect_uri=${e()}&state=addc88ed-299c-4a1b-b304-555bdffb8909&response_mode=fragment&response_type=code&scope=openid&nonce=e19093ff-fab9-4a80-80a8-99f9a979a836`,
            clientId: "newbly-api",
            "enable-cors": !0,
          });
        }, 3e3);
      const o = () => {
          keycloak.idToken
            ? console.log(keycloak.idTokenParsed)
            : keycloak.loadUserProfile(
                function () {
                  console.log(keycloak.profile);
                },
                function () {
                  console.log(
                    "Failed to retrieve user details. Please enable claims or account role"
                  );
                }
              );
        },
        l = () => {
          keycloak
            .updateToken(30)
            .then(o)
            .catch(() => {
              console.error("Failed to load data. Check console log"),
                toastr.error("Failed to load data. Check console log"),
                console.error("Failed to load data. User is logged out."),
                toastr.error("Failed to load data. User is logged out.");
            });
        };
      var r = ["ar", "hr", "en", "ro", "ru", "sr", "tr", "uk"],
        s = {
          ar: {
            title: "الترجمات متوفرة لهذا المقال!",
            includeText: "تضمين الترجمة!",
            notThisTime: "ليس هذه المرة.",
            translationConsentText:
              "متصفحك باللغة العربية لذلك اعتقدنا أنك قد ترغب في تضمين ترجمات باللغة العربية لهذه المقالة.",
            saveChanges: "احفظ التغييرات",
            cancel: "يلغي",
            discardChanges: "تجاهل التغييرات",
            loginRegister: "دخولتسجيل",
            authTextOne: "رائع! لقد ساهمت بإصلاح خطأ في الترجمة!",
            authTextTwo:
              "لكي نتمكن من مراجعة اقتراحاتك ، عليك أولاً تسجيل الدخول. إذا لم يكن لديك حساب بعد ، فإن التسجيل سهل للغاية!",
            areYouSure: "هل أنت واثق؟",
          },
          bh: {
            title: "इस लेख के लिए अनुवाद उपलब्ध हैं!",
            includeText: "अनुवाद शामिल करें!",
            notThisTime: "इस समय नहीं।",
            translationConsentText:
              "आपका ब्राउज़र हिंदी में है इसलिए हमने सोचा कि आप इस लेख के लिए हिंदी में अनुवाद शामिल करना चाहेंगे।",
            saveChanges: "परिवर्तनों को सुरक्षित करें",
            cancel: "रद्द करना",
            discardChanges: "परिवर्तनों को निरस्त करें",
            loginRegister: "लॉग इन / रजिस्टर",
            authTextOne:
              "बहुत बढ़िया! आपने अनुवाद त्रुटि को ठीक करके योगदान दिया है!",
            authTextTwo:
              "हमारे लिए आपके सुझावों की समीक्षा करने के लिए, आपको पहले लॉग इन करना होगा। यदि आपके पास अभी तक कोई खाता नहीं है, तो साइन अप करना बहुत आसान है!",
            areYouSure: "क्या आपको यकीन है?",
          },
          en: {
            title: "Translations available for this article!",
            includeText: "Include translation!",
            notThisTime: "Not this time.",
            translationConsentText:
              "Your browser is in English so we thought you might want to include translations in English for this article.",
            saveChanges: "Save changes",
            cancel: "Cancel",
            discardChanges: "Discard changes",
            loginRegister: "Login / Register",
            authTextOne:
              "Awesome! You contributed by fixing a translation error!",
            authTextTwo:
              "In order for us to review your suggestions, you need first to log in. If you do not yet have an account, signing up is very easy!",
            areYouSure: "Are you sure?",
          },
          fr: {
            title: "Des traductions sont disponibles pour cet article !",
            includeText: "Inclure la traduction !",
            notThisTime: "Pas cette fois.",
            translationConsentText:
              "Votre navigateur est en français, nous avons donc pensé que vous voudriez peut-être inclure des traductions en français pour cet article.",
            saveChanges: "Sauvegarder les modifications",
            cancel: "Annuler",
            discardChanges: "Annuler les modifications",
            loginRegister: "Connexion ou Inscription",
            authTextOne:
              "Impressionnant! Vous avez contribué en corrigeant une erreur de traduction !",
            authTextTwo:
              "Pour que nous puissions examiner vos suggestions, vous devez d'abord vous connecter. Si vous n'avez pas encore de compte, l'inscription est très simple !",
            areYouSure: "Êtes-vous sûr?",
          },
          hr: {
            title: "Prijevodi su dostupni za ovaj članak!",
            includeText: "Uključi prijevod!",
            notThisTime: "Ne ovaj put.",
            translationConsentText:
              "Vaš preglednik je na hrvatskom pa smo mislili da biste mogli uključiti prijevode na hrvatski za ovaj članak.",
            saveChanges: "Spremi promjene",
            cancel: "Otkazati",
            discardChanges: "Odbaciti promjene",
            loginRegister: "Prijavite se ili se registrirajte",
            authTextOne:
              "Super! Doprinijeli ste ispravljanjem pogreške u prijevodu!",
            authTextTwo:
              "Kako bismo mogli pregledati vaše prijedloge, morate se prvo prijaviti. Ako još nemate račun, prijava je vrlo jednostavna!",
            areYouSure: "Jesi li siguran?",
          },
          ro: {
            title: "Sunt disponibile traduceri pentru acest articol!",
            includeText: "Includeți traducerea!",
            notThisTime: "Nu de data asta.",
            translationConsentText:
              "Browserul dvs. este în limba română, așa că ne-am gândit că ați dori să includeți traduceri în limba română pentru acest articol.",
            saveChanges: "Salvează modificările",
            cancel: "Anulare",
            discardChanges: "Renunțați la modificări",
            loginRegister: "Autentificați-vă sau înregistrați-vă",
            authTextOne:
              "Minunat! Ai contribuit prin remedierea unei erori de traducere!",
            authTextTwo:
              "Pentru ca noi să examinăm sugestiile dvs., trebuie mai întâi să vă conectați. Dacă nu aveți încă un cont, înregistrarea este foarte ușoară!",
            areYouSure: "Esti sigur?",
          },
          ru: {
            title: "Для этой статьи доступны переводы!",
            includeText: "Включите перевод!",
            notThisTime: "Не в этот раз.",
            translationConsentText:
              "Ваш браузер на русском языке, поэтому мы подумали, что вы, возможно, захотите включить русский перевод для этой статьи.",
            saveChanges: "Сохранить изменения",
            cancel: "Отмена",
            discardChanges: "Отменить изменения",
            loginRegister: "Войдите или зарегистрируйтесь",
            authTextOne:
              "Потрясающий! Вы внесли свой вклад, исправив ошибку перевода!",
            authTextTwo:
              "Чтобы мы рассмотрели ваши предложения, вам необходимо сначала войти в систему. Если у вас еще нет учетной записи, зарегистрироваться очень просто!",
            areYouSure: "Ты уверен?",
          },
          sr: {
            title: "Преводи су доступни за овај чланак!",
            includeText: "Укључи превод!",
            notThisTime: "Не овог пута.",
            translationConsentText:
              "Ваш претраживач је на српском, па смо мислили да бисте могли да укључите преводе на српски за овај чланак.",
            saveChanges: "Сачувај измене",
            cancel: "Поништити, отказати",
            discardChanges: "Одбаците промене",
            loginRegister: "Пријавите се или региструјте",
            authTextOne:
              "Сјајно! Ви сте допринели исправљањем грешке у преводу!",
            authTextTwo:
              "Да бисмо прегледали ваше предлоге, прво се морате пријавити. Ако још увек немате налог, регистрација је веома лака!",
            areYouSure: "Да ли сте сигурни?",
          },
          tr: {
            title: "Bu makale için çeviriler mevcuttur!",
            includeText: "Çeviri dahil!",
            notThisTime: "Bu sefer değil.",
            translationConsentText:
              "Tarayıcınız Türkçe olduğu için bu makaleye Türkçe çeviriler eklemek isteyebileceğinizi düşündük.",
            saveChanges: "Değişiklikleri Kaydet",
            cancel: "İptal",
            discardChanges: "Değişiklikleri gözardı et",
            loginRegister: "Giriş yap veya kaydol",
            authTextOne:
              "Mükemmel! Bir çeviri hatasını düzelterek katkıda bulundunuz!",
            authTextTwo:
              "Önerilerinizi inceleyebilmemiz için öncelikle giriş yapmanız gerekiyor. Henüz bir hesabınız yoksa üye olmak çok kolay!",
            areYouSure: "Emin misin?",
          },
          uk: {
            title: "Для цієї статті доступні переклади!",
            includeText: "Включіть переклад!",
            notThisTime: "Не цього разу.",
            translationConsentText:
              "Ваш веб-переглядач україномовний, тому ми подумали, що ви можете включити переклад українською для цієї статті.",
            saveChanges: "Зберегти зміни",
            cancel: "Скасувати",
            discardChanges: "Скасувати зміни",
            loginRegister: "Увійти або зареєструватися",
            authTextOne:
              "Чудово! Ви зробили свій внесок, виправивши помилку перекладу!",
            authTextTwo:
              "Щоб ми могли розглянути ваші пропозиції, вам потрібно спочатку ввійти. Якщо у вас ще немає облікового запису, зареєструватися дуже просто!",
            areYouSure: "Ти впевнений?",
          },
        };
      function c() {
        let e,
          n,
          t,
          a,
          i,
          o,
          l,
          r,
          c,
          u,
          d,
          g = s;
        switch (k()) {
          case "ar":
            (longLang = "Arabic"),
              (e = g.ar.title),
              (n = g.ar.includeText),
              (t = g.ar.notThisTime),
              (a = g.ar.translationConsentText),
              (i = g.ar.saveChanges),
              (o = g.ar.cancel),
              (l = g.ar.discardChanges),
              (r = g.ar.loginRegister),
              (c = g.ar.authTextOne),
              (u = g.ar.authTextTwo),
              (d = g.ar.areYouSure);
            break;
          case "bh":
            (longLang = "Bihari"),
              (e = g.bh.title),
              (n = g.bh.includeText),
              (t = g.bh.notThisTime),
              (a = g.bh.translationConsentText),
              (i = g.bh.saveChanges),
              (o = g.bh.cancel),
              (l = g.bh.discardChanges),
              (r = g.bh.loginRegister),
              (c = g.bh.authTextOne),
              (u = g.bh.authTextTwo),
              (d = g.bh.areYouSure);
            break;
          case "en":
          default:
            (longLang = "English"),
              (e = g.en.title),
              (n = g.en.includeText),
              (t = g.en.notThisTime),
              (a = g.en.translationConsentText),
              (i = g.en.saveChanges),
              (o = g.en.cancel),
              (l = g.en.discardChanges),
              (r = g.en.loginRegister),
              (c = g.en.authTextOne),
              (u = g.en.authTextTwo),
              (d = g.en.areYouSure);
            break;
          case "fr":
            (longLang = "French"),
              (e = g.fr.title),
              (n = g.fr.includeText),
              (t = g.fr.notThisTime),
              (a = g.fr.translationConsentText),
              (i = g.fr.saveChanges),
              (o = g.fr.cancel),
              (l = g.fr.discardChanges),
              (r = g.fr.loginRegister),
              (c = g.fr.authTextOne),
              (u = g.fr.authTextTwo),
              (d = g.fr.areYouSure);
            break;
          case "hr":
            (longLang = "Croatian"),
              (e = g.hr.title),
              (n = g.hr.includeText),
              (t = g.hr.notThisTime),
              (a = g.hr.translationConsentText),
              (i = g.hr.saveChanges),
              (o = g.hr.cancel),
              (l = g.hr.discardChanges),
              (r = g.hr.loginRegister),
              (c = g.hr.authTextOne),
              (u = g.hr.authTextTwo),
              (d = g.hr.areYouSure);
            break;
          case "ro":
            (longLang = "Romanian"),
              (e = g.ro.title),
              (n = g.ro.includeText),
              (t = g.ro.notThisTime),
              (a = g.ro.translationConsentText),
              (i = g.ro.saveChanges),
              (o = g.ro.cancel),
              (l = g.ro.discardChanges),
              (r = g.ro.loginRegister),
              (c = g.ro.authTextOne),
              (u = g.ro.authTextTwo),
              (d = g.ro.areYouSure);
            break;
          case "ru":
            (longLang = "Russian"),
              (e = g.ru.title),
              (n = g.ru.includeText),
              (t = g.ru.notThisTime),
              (a = g.ru.translationConsentText),
              (i = g.ru.saveChanges),
              (o = g.ru.cancel),
              (l = g.ru.discardChanges),
              (r = g.ru.loginRegister),
              (c = g.ru.authTextOne),
              (u = g.ru.authTextTwo),
              (d = g.ru.areYouSure);
            break;
          case "sr":
            (longLang = "Serbian"),
              (e = g.sr.title),
              (n = g.sr.includeText),
              (t = g.sr.notThisTime),
              (a = g.sr.translationConsentText),
              (i = g.sr.saveChanges),
              (o = g.sr.cancel),
              (l = g.sr.discardChanges),
              (r = g.sr.loginRegister),
              (c = g.sr.authTextOne),
              (u = g.sr.authTextTwo),
              (d = g.sr.areYouSure);
            break;
          case "tr":
            (longLang = "Turkish"),
              (e = g.tr.title),
              (n = g.tr.includeText),
              (t = g.tr.notThisTime),
              (a = g.tr.translationConsentText),
              (i = g.uk.saveChanges),
              (o = g.uk.cancel),
              (l = g.uk.discardChanges),
              (r = g.uk.loginRegister),
              (c = g.uk.authTextOne),
              (u = g.uk.authTextTwo),
              (d = g.tr.areYouSure);
            break;
          case "uk":
            (longLang = "Ukrainian"),
              (e = g.uk.title),
              (n = g.uk.includeText),
              (t = g.uk.notThisTime),
              (a = g.uk.translationConsentText),
              (i = g.uk.saveChanges),
              (o = g.uk.cancel),
              (l = g.uk.discardChanges),
              (r = g.uk.loginRegister),
              (c = g.uk.authTextOne),
              (u = g.uk.authTextTwo),
              (d = g.uk.areYouSure);
        }
        return (
          (g = longLang),
          (function (e, n) {
            let t = { code: e, name: n, native: n };
            localStorage.setItem("@language", JSON.stringify(t));
          })(k(), longLang),
          {
            longLang: longLang,
            newblyUIModalLang: g,
            newblyModalTitle: e,
            newblyTranslationConsentText: a,
            newblyModalIncludeText: n,
            newblyModalCancelText: t,
            saveChanges: i,
            cancel: o,
            discardChanges: l,
            loginRegister: r,
            authTextOne: c,
            authTextTwo: u,
            areYouSure: d,
          }
        );
      }
      var u = function (e, n) {
          const t = `\n          <div class="enhance-newbly modal-wrapper" id="newbly-textarea-modal-wrapper">\n            <div class="enhance-newbly modal" id="">\n              <div class="enhance-newbly editable-container" id="newbly-textarea-container">\n                <div class="enhance-newbly edit-section">\n                  <textarea\n                  dir=${(function () {
            let e;
            e = "ar" === k() ? "rtl" : "ltr";
            return e;
          })()}\n                  class="enhance-newbly" spellcheck="false" id="enhance-translations">${n}</textarea>\n                  <div class="enhance-newbly edit-buttons" id="">\n                    <button class="enhance-newbly disabled" id="save-suggested-changes"></button>\n                    <button class="enhance-newbly" id="cancel-changes"></button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        `;
          (document.body.innerHTML += t),
            "ar" === k() &&
              document
                .getElementById("newbly-textarea-modal-wrapper")
                .classList.add("arabic"),
            (document.getElementById("save-suggested-changes").innerText =
              c().saveChanges),
            (document.getElementById("cancel-changes").innerText = c().cancel),
            R.newblyTextareaBtns(e, n),
            (document.getElementById(
              "newbly-translation--ui-modal__text"
            ).innerText = c().newblyTranslationConsentText);
        },
        d = function (e, n) {
          (document.body.innerHTML +=
            '\n          \x3c!-- Confirmation modal --\x3e\n          <div class="enhance-newbly modal-wrapper" id="newbly-enhance-confirmation-modal">\n            <div class="enhance-newbly modal" id="">\n              <div class="enhance-newbly editable-container" id="">\n              \x3c!-- Modal (Are you sure) --\x3e\n                <p class="enhance-newbly" id="are-you-sure"></p>\n                <div class="enhance-newbly edit-buttons" id="">\n                  <button class="enhance-newbly" id="close-newbly-enhance-textarea"></button>\n                  <button class="enhance-newbly" id="close-newbly-modal"></button>\n                </div>\n              </div>\n            </div>\n          </div>\n        '),
            "ar" === k() &&
              document
                .getElementById("newbly-enhance-confirmation-modal")
                .classList.add("arabic"),
            (document.getElementById("are-you-sure").innerText =
              c().areYouSure),
            (document.getElementById(
              "close-newbly-enhance-textarea"
            ).innerText = c().discardChanges),
            (document.getElementById("close-newbly-modal").innerText =
              c().cancel),
            (document.getElementById(
              "newbly-enhance-confirmation-modal"
            ).style.display = "flex"),
            R.newblyConfirmationBtns(e, n);
        },
        g = function () {
          (document.body.innerHTML +=
            '\n          \x3c!-- Authentication modal --\x3e\n          <div class="enhance-newbly modal-wrapper" id="enhance-newbly-auth-wrapper">\n            <div class="enhance-newbly modal">\n              <div class="enhance-newbly close-button" id="enhance-newbly-auth-wrapper-close-button"><svg fill="#b0adab" width="35" height="35" viewBox="0 0 24 24">\n                  <path d="M0 0h24v24H0V0z" fill="none"></path>\n                  <path\n                    d="M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z">\n                  </path>\n                </svg></div>\n              <div class="enhance-newbly modal-content">\n                <p class="enhance-newbly" id="enhance-newbly-auth-text-one"></p>\n                <p class="enhance-newbly" id="enhance-newbly-auth-text-two"></p>\n                  <button class="enhance-newbly login-button" id="enhance-newbly-auth-button"><span\n                    class="enhance-newbly"></span>\n                  </button>\n              </div>\n            </div>\n          </div>\n        '),
            (document.getElementById(
              "enhance-newbly-auth-wrapper"
            ).style.display = "flex"),
            "ar" === k() &&
              document
                .getElementById("enhance-newbly-auth-wrapper")
                .classList.add("arabic"),
            (document.getElementById("enhance-newbly-auth-text-one").innerText =
              c().authTextOne),
            (document.getElementById("enhance-newbly-auth-text-two").innerText =
              c().authTextTwo),
            (document.getElementById("enhance-newbly-auth-button").innerText =
              c().loginRegister),
            R.newblyAuthModalBtns();
        };
      (function () {
        document.body.innerHTML +=
          '\n        <div class="newbly-translation--ui-modal" id="newbly-translation--ui-modal">\n              <div class="newbly-translation--ui-modal__title" id="newbly-translation--ui-modal__title"></div>\n\n              <div class="newbly-translation--ui-modal__text" id="newbly-translation--ui-modal__text"></div>\n\n              <div class="newbly-translation--ui-modal__btn-container">\n                <button id="include-translation" class="newbly-translation--ui-modal__btn__btn"></button>\n\n                <button id="cancel-translation" class="newbly-translation--ui-modal__btn__btn"></button>\n              </div>\n          </div>\n      ';
      })();
      var h = function (e, n) {
          f(e, n);
          return `\n          \x3c!-- Edit icons --\x3e\n          <span class="newbly-translated-text edit-icon" id="edit-icon-${e}">\n            <img src="https://cdn.jsdelivr.net/gh/eunit99/newbly-translator@1.0.10/assets/icons/edit-icon.svg" alt="Edit">\n          </span>\n          \x3c!-- Edit icons --\x3e\n        `;
        },
        y = function () {
          document.getElementById(
            "newbly-textarea-modal-wrapper"
          ).style.display = "none";
        },
        m = function () {
          document.getElementById(
            "newbly-enhance-confirmation-modal"
          ).style.display = "none";
        },
        b = function () {
          document.getElementById("enhance-newbly-auth-wrapper").style.display =
            "none";
        },
        T = function () {
          document.getElementById(
            "newbly-translation--ui-modal"
          ).style.display = "none";
        },
        w = function (e, n) {
          u(e, n),
            (document.getElementById(
              "newbly-textarea-modal-wrapper"
            ).style.display = "flex"),
            (function (e, n) {
              const t = document.getElementById("enhance-translations"),
                a = document.getElementById("save-suggested-changes");
              var i = !1;
              let o;
              t.addEventListener("input", function (e) {
                (o = e.target.value),
                  o !== n
                    ? (a.classList.remove("disabled"), (i = !0), C(!1))
                    : (a.classList.add("disabled"), (i = !1));
              });
            })(0, n);
        },
        f = function (e, n) {
          let t;
          (t = null === e ? "edit-icon-null" : `edit-icon-${e}`),
            setTimeout(() => {
              document
                .getElementById(t)
                .addEventListener("click", function (t) {
                  w(e, n);
                });
            }, 1e3);
        };
      function v() {
        let e, n;
        const t = window.location.search,
          a = new URLSearchParams(t);
        return (
          a.has("nLang") || a.has("nlang")
            ? ((e = a.get("nLang") || a.get("nlang")), (n = !0))
            : (a.has("nLang") && a.has("nlang")) || ((e = "english"), (n = !1)),
          {
            targetLanguage: e,
            URLHasNLangParam: n,
          }
        );
      }
      function x() {
        let e;
        for (let n = 0; n < r.length; n++)
          r[n] === k() &&
            ((e = !0),
            console.log(
              "Newbly translation is available for: " + c().longLang
            ));
        return e;
      }
      var p = function () {
        var e,
          n,
          t = window.navigator,
          a = ["language", "browserLanguage", "systemLanguage", "userLanguage"];
        if (Array.isArray(t.languages))
          for (e = 0; e < t.languages.length; e++)
            if ((n = t.languages[e]) && n.length) return n;
        for (e = 0; e < a.length; e++) if ((n = t[a[e]]) && n.length) return n;
        return null;
      };
      function k() {
        let e,
          n = p();
        return (
          (e =
            -1 !== n.indexOf("-")
              ? n.split("-")[0]
              : -1 !== n.indexOf("_")
              ? n.split("_")[0]
              : n),
          e
        );
      }
      function C(e) {
        localStorage.setItem("@suggestionsSent", e);
      }
      var L = {
        includeTranslation: function () {
          document
            .getElementById("include-translation")
            .addEventListener("click", function (e) {
              A(),
                console.info("Newbly translation started!"),
                T(),
                localStorage.setItem("@translationModalViewed", !0);
            });
        },
        cancelTranslations: function () {
          document
            .getElementById("cancel-translation")
            .addEventListener("click", function (e) {
              console.info("Newbly translation cancelled"), T();
            });
        },
      };
      function I() {
        let n,
          t = e().split("?"),
          a = t[0];
        if (t[1]) {
          function i() {
            let e,
              n = t[1];
            return (
              (e = n.includes(`&nLang=${v().targetLanguage}`)
                ? n.replace(`&nLang=${v().targetLanguage}`, "")
                : n.includes(`?nLang=${v().targetLanguage}`)
                ? n.replace(`?nLang=${v().targetLanguage}`, "")
                : n === `nLang=${v().targetLanguage}`
                ? ""
                : n),
              e
            );
          }
          n = i() ? a + "?" + i() : a;
        } else n = t[0];
        return n;
      }
      function E() {
        let e;
        return (
          (e = v().URLHasNLangParam
            ? "https://api.newb.ly/articles/?language=" +
              v().targetLanguage +
              "&url=" +
              I()
            : "https://api.newb.ly/articles/?language=" +
              c().longLang.toLowerCase() +
              "&url=" +
              I()),
          e
        );
      }
      var B = function (e, n) {
          y(), d(n);
        },
        S = async function (e, o) {
          let l = document.getElementById("enhance-translations").value;
          !(function (e, n) {
            const t = `newbly-translated-text-${e}`;
            document.getElementById(t).innerHTML = n;
          })(e, l),
            await (async function (e, t) {
              const o = await a();
              let l,
                r,
                s,
                c = await i();
              (l = null !== c ? c.title : ""),
                (r = null !== c ? c.content : []),
                (s = null !== c ? c.suggestions : []);
              let u = { title: l, suggestions: s, content: r };
              null === e && (u.title = t),
                null !== e &&
                  (u.content[e]
                    ? u.content.splice(e, 1, t)
                    : u.content.push(t));
              u.suggestions.push(u.suggestions.length),
                localStorage.setItem(o, JSON.stringify(u)),
                await n();
            })(e, l),
            y(),
            setTimeout(() => {
              keycloak
                .init({ onLoad: "check-sso", flow: "implicit" })
                .then(function (n) {
                  n
                    ? JSON.parse(localStorage.getItem("@suggestionsSent")) ||
                      (async function (e, n) {
                        let a = await t(),
                          i = {
                            articleContentIndex: e,
                            articleTranslatedPartCorrection: n,
                          };
                        const o = {
                          method: "PATCH",
                          headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json; charset=UTF-8",
                            Authorization: "Bearer " + keycloak.token,
                          },
                          body: JSON.stringify(i),
                        };
                        fetch(`https://api.newb.ly/articles/${a}/suggestion`, o)
                          .then((e) => {
                            if (!e.ok) throw (C(!1), Error(e.status));
                            return e.json();
                          })
                          .then((e) => {
                            console.info(
                              "The suggestion was successfully submitted!"
                            ),
                              toastr.success(
                                "The suggestion was successfully submitted!"
                              ),
                              C(!0);
                          })
                          .catch((e) => {
                            console.error("An error occurred: " + e),
                              toastr.error("An error occurred"),
                              C(!1);
                          });
                      })(e, l)
                    : g();
                })
                .catch(function () {
                  console.error("Failed to initialize Keycloak"),
                    toastr.error("Failed to initialize Keycloak");
                });
            }, 3e3);
        },
        j = function (e) {
          m(), w();
        },
        M = function () {
          y(), m(), f(5, "translatedText");
        },
        O = function (e) {
          y(), b();
        },
        _ = function (e) {
          b(),
            setTimeout(() => {
              keycloak.init({ onLoad: "login-required", flow: "implicit" });
            }, 3e3);
        },
        R = {
          newblyTextareaBtns: function (e, n) {
            document
              .getElementById("cancel-changes")
              .addEventListener("click", function (t) {
                t.preventDefault(), B(e, n);
              }),
              document
                .getElementById("save-suggested-changes")
                .addEventListener("click", function (t) {
                  t.preventDefault(), S(e, n);
                });
          },
          newblyConfirmationBtns: function (e) {
            document
              .getElementById("close-newbly-modal")
              .addEventListener("click", function (n) {
                n.preventDefault(), j(e);
              }),
              document
                .getElementById("close-newbly-enhance-textarea")
                .addEventListener("click", function (n) {
                  n.preventDefault(), M(e);
                });
          },
          newblyAuthModalBtns: function () {
            document
              .getElementById("enhance-newbly-auth-wrapper-close-button")
              .addEventListener("click", function (e) {
                e.preventDefault(), O();
              }),
              document
                .getElementById("enhance-newbly-auth-button")
                .addEventListener("click", function (e) {
                  e.preventDefault(), _();
                });
          },
        },
        A = function (e) {
          let i = "";
          !(async function (e) {
            (i = await (async function (e) {
              let n = await fetch(e),
                t = await n.json();
              return n.ok
                ? t
                : (console.error(
                    "Something went wrong while contacting the Newbly server. Could not fetch translations."
                  ),
                  toastr.error(
                    "Something went wrong while contacting the Newbly server. Could not fetch translations."
                  ),
                  !1);
            })(e)),
              o(i);
          })(E());
          var o = function (e) {
              return r(e.articleTitle), s(e.articleContent), e;
            },
            r = function (e) {
              return u(e) && d(e), e;
            },
            s = function (e) {
              for (let n = 0; n < e.length; n++) u(e[n]) && d(e[n]);
              return e;
            },
            u = function (e) {
              return document.body.textContent.includes(e)
                ? (console.info("Texts exist on page: " + e), !0)
                : (console.error("Texts do not exist on page: " + e), !1);
            },
            d = function (e) {
              const n = [
                "a",
                "article",
                "b",
                "div",
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "i",
                "li",
                "main",
                "ol",
                "p",
                "q",
                "section",
                "span",
                "strong",
                "summary",
                "u",
                "ul",
              ];
              var t,
                a = [];
              for (let o = 0; o < n.length; o++) {
                var i = n[o];
                for (var i of document.querySelectorAll(i))
                  i.textContent.includes(e) &&
                    (a.push(i), (t = a[a.length - 1]), y(t, t.innerText));
              }
              return t.innerText;
            },
            g = function (e, n, t) {
              if (
                (n.insertAdjacentHTML(
                  "beforeend",
                  `<p class='newbly-translated-text' id='newbly-translated-text-${e}'> ${t}</p>`
                ),
                "arabic" === v().targetLanguage ||
                  "arabic" === c().longLang.toLowerCase())
              ) {
                const e = document.querySelectorAll(".newbly-translated-text");
                for (const n of e) n.classList.add("arabic");
              }
            },
            y = function (e) {
              !(function () {
                var n = i.articleTitleTranslated,
                  t = i.articleTitle;
                e.innerText === t &&
                  (g(null, e, n),
                  e.insertAdjacentHTML("beforeend", h(null, n)));
                var a = i.articleContentTranslated,
                  o = i.articleContent;
                for (let n = 0; n < o.length; n++)
                  e.innerText === o[n] &&
                    (g(n, e, a[n]),
                    e.insertAdjacentHTML("beforeend", h(n, a[n])));
              })();
            };
          setTimeout(() => {
            keycloak.init({ onLoad: "check-sso", flow: "implicit" }).then(l);
          }, 3e3),
            (async function () {
              let e = await a(),
                i = await t();
              e === `${c().longLang.toLowerCase()}_${i}` && (await n());
            })();
        };
      console.log(
        "Newbly translation initialized. Learn more here: https://newb.ly/"
      ),
        console.info("Ξunit"),
        v().URLHasNLangParam ||
        JSON.parse(localStorage.getItem("@translationModalViewed"))
          ? A()
          : (function () {
              let e;
              !v().URLHasNLangParam && x()
                ? ((document.getElementById(
                    "newbly-translation--ui-modal"
                  ).style.display = "block"),
                  "ar" === k() &&
                    document
                      .getElementById("newbly-translation--ui-modal")
                      .classList.add("arabic"),
                  (document.getElementById(
                    "newbly-translation--ui-modal__text"
                  ).innerText = c().newblyTranslationConsentText),
                  (document.getElementById(
                    "newbly-translation--ui-modal__title"
                  ).innerText = c().newblyModalTitle),
                  (document.getElementById("include-translation").innerText =
                    c().newblyModalIncludeText),
                  (document.getElementById("cancel-translation").innerText =
                    c().newblyModalCancelText),
                  L.includeTranslation(),
                  L.cancelTranslations(),
                  (e = !0))
                : x() ||
                  (console.error(
                    "Newbly translation is not currently available for this page. Browser language is: " +
                      p()
                  ),
                  (e = !1));
            })();
    },
  };
  newbly.init();
})();
